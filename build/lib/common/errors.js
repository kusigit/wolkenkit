"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.errors = void 0;
const defekt_1 = require("defekt");
const errors = defekt_1.defekt({
    AggregateDefinitionMalformed: {},
    AggregateIdentifierMalformed: {},
    AggregateNotFound: {},
    ApplicationMalformed: {},
    ApplicationNotFound: {},
    ClaimsMalformed: {},
    CommandNotAuthorized: {},
    CommandHandlerMalformed: {},
    CommandMalformed: {},
    CommandNotFound: {},
    CommandRejected: {},
    CompilationFailed: {},
    ContentTypeMismatch: {},
    ContextNotFound: {},
    CorsOriginInvalid: {},
    DatabaseTypeInvalid: {},
    DirectoryAlreadyExists: {},
    DirectoryNotFound: {},
    DispatchFailed: {},
    DockerFailed: {},
    DockerBuildFailed: {},
    DockerNotReachable: {},
    DockerPushFailed: {},
    DomainEventAlreadyExists: {},
    DomainEventHandlerMalformed: {},
    DomainEventNotAuthorized: {},
    DomainEventNotFound: {},
    DomainEventMalformed: {},
    DomainEventRejected: {},
    DomainEventUnknown: {},
    ExecutableNotFound: {},
    ExpirationInPast: {},
    FileAlreadyExists: {},
    FileNotFound: {},
    FlowDefinitionMalformed: {},
    FlowDomainEventHandlerMalformed: {},
    FlowIsAlreadyReplaying: {},
    FlowNotFound: {},
    GraphQlError: {},
    HooksDefinitionMalformed: {},
    IdentifierMismatch: {},
    InfrastructureDefinitionMalformed: {},
    InvalidOperation: {},
    ItemAlreadyExists: {},
    ItemIdentifierMalformed: {},
    ItemIdentifierNotFound: {},
    ItemNotFound: {},
    ItemNotLocked: {},
    LockAcquireFailed: {},
    LockExpired: {},
    LockRenewalFailed: {},
    NotAuthenticated: {},
    NotFound: {},
    NotificationHandlerMalformed: {},
    NotificationNotFound: {},
    NotificationsDefinitionMalformed: {},
    NotificationSubscriberMalformed: {},
    ParameterInvalid: {},
    ProjectionHandlerMalformed: {},
    PublisherTypeInvalid: {},
    QueryHandlerMalformed: {},
    QueryHandlerNotFound: {},
    QueryHandlerTypeMismatch: {},
    QueryNotAuthorized: {},
    QueryOptionsInvalid: {},
    QueryResultInvalid: {},
    ReplayFailed: {},
    ReplayConfigurationInvalid: {},
    RequestFailed: {},
    RequestMalformed: {},
    RevisionAlreadyExists: {},
    RevisionTooLow: {},
    SnapshotMalformed: {},
    SnapshotNotFound: {},
    StreamClosedUnexpectedly: {},
    SubscriberTypeInvalid: {},
    TokenMismatch: {},
    TypeInvalid: {},
    UnknownError: {},
    ViewDefinitionMalformed: {},
    ViewNotFound: {}
});
exports.errors = errors;
//# sourceMappingURL=errors.js.map